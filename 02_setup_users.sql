-- Try to drop the user first, ignoring errors if it doesn't exist
BEGIN
   EXECUTE IMMEDIATE 'DROP USER C##dbzuser CASCADE';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -1918 THEN
         RAISE;
      END IF;
END;
/

-- Create the common user
CREATE USER C##dbzuser IDENTIFIED BY dbz;
/

-- Grant all required privileges across all containers
ALTER SESSION SET CONTAINER = CDB$ROOT;
/
GRANT CREATE SESSION, SET CONTAINER, LOGMINING, ALTER ANY TABLE TO C##dbzuser CONTAINER=ALL;
/
GRANT SELECT_CATALOG_ROLE, EXECUTE_CATALOG_ROLE TO C##dbzuser CONTAINER=ALL;
/
GRANT SELECT ON V$DATABASE TO C##dbzuser CONTAINER=ALL;
/
GRANT SELECT ON V$ARCHIVED_LOG TO C##dbzuser CONTAINER=ALL;
/
GRANT SELECT ON V$LOGMNR_CONTENTS TO C##dbzuser CONTAINER=ALL;
/
GRANT SELECT ON V$LOG TO C##dbzuser CONTAINER=ALL;
/
GRANT SELECT ON V$LOGFILE TO C##dbzuser CONTAINER=ALL;
/
GRANT SELECT ON V$INSTANCE TO C##dbzuser CONTAINER=ALL;
/
GRANT SELECT on V$TRANSPORTABLE_PLATFORM to C##dbzuser CONTAINER=ALL;
/

-- Switch into the PDB to grant PDB-specific privileges
ALTER SESSION SET CONTAINER = FREEPDB1;
/
GRANT CREATE TABLE, CREATE VIEW, CREATE SEQUENCE TO C##dbzuser;
/
ALTER USER C##dbzuser QUOTA UNLIMITED ON users;
/

-- Enable database-level supplemental logging (must be done in root)
ALTER SESSION SET CONTAINER = CDB$ROOT;
/
ALTER DATABASE ADD SUPPLEMENTAL LOG DATA (PRIMARY KEY) COLUMNS;
/